install-package StructureMap.MVC4
Add namespace
using StructureMap; in file IoC.cs




Install-Package Unity.Mvc4

 injection patterns (Constructor Injection, Property Injection, and Method Injection), we’ll use the primary DI pattern which is Constructor Injection.
 So, how to choose a Dependency Injector? Well every Dependency Injector has its strengths and weaknesses and comes with a different feature set. Choosing Dependency Injector is a matter of evaluation and what you expect out of it. 

Ninject is an open source Dependency Injector for .NET, created by Nate Kohari, and it comes with good set of extension and one of them is extension for ASP.NET MVC3. 

Anyways, like me if you also like to try new and promising stuff, you will like to use Ninject , you can read more about Ninject on Ninject.org 

Why Dependency Injection?

There are several benefits of using dependency injection rather than having components satisfy their own dependencies. Some of these benefits are: 
•Reduced boiler plate code and dependency carrying, flexibility to use alternative implementation of a given service without recompiling the application code. 
•Loose coupling between classes by promoting use of interfaces
•Code becomes more reusable, testable and readable. If you are new to DI you can read more.
