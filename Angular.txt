http://www.dotnetcurry.com/angularjs/1202/angular-http-service-aspnet-mvc
http://www.c-sharpcorner.com/UploadFile/91b369/basics-of-angular-js-part-1/
http://www.c-sharpcorner.com/UploadFile/deveshomar/basics-of-angularjs/
http://www.c-sharpcorner.com/UploadFile/deveshomar/basics-of-angularjs/
http://www.c-sharpcorner.com/UploadFile/8a67c0/angularjs-with-Asp-Net-mvc/

AngularJS is one of the most popular client-side frameworks on the web. It is maintained by Google and helps in creating Single-Page Applications using HTML, CSS and JavaScript. This framework provides Model-View-Controller (MVC) on the client side and helps the developer to implement structural JavaScript on client-side. The Data-Binding and Dependency Injection features provided by Angular simplifies the heavy and complex JavaScript code on the client, which we used to write earlier to do the same task. If you are absolutely new to AngularJS, you can get some additional information over here.



******************Angular  Interview Questions**************
Angular Factory object: 
Sharing Data across Angular.js Controllers:
Angular.js is commonly related to Single Page Applications (SPA). In SPA applications, we have several Views loaded in one master page (you can call it as an Index page) in which case, we have one or more controllers bound with one View. When we navigate from one view to another, we may want to pass data across views using one controller to another.
To pass or share data across controllers, we need to make use of the Angular Factory object.

********************Diff B/w service() or factory()*****************
The advantage of using factory is that, we can have typical coding style of declaring private and public functions like a class. So we can hide a specific functionality form direct access from the injectable components.
One major difference between Angular.js  Service and Factory is a Service is a constructor function, whereas a Factory is not. If we use service() or factory(), internally a factory always gets called which in turn creates a provider for our service.
Whether to use Factory or Service is purely a coding standard choice. A Factory is more preferred because of its class like definition whereas Service are used when we are using ES6 classes or when we plan to migrate to ES6.
http://www.dotnetcurry.com/angularjs/1252/angularjs-service-factory

*************************$http*************************
AngularJS provides built-in support to communicate with a server. You can either use an XMLHttpRequest object (async request) or JSON (sync or async request).

$http is a core Angular service that provides access to low-level interactions with remote Http services using the XMLHttpRequest object. The $http API is used to perform asynchronous operations and returns a promise object to the caller which can be used to receive notifications about the Ajax request.

•$http.get
•$http.post
•$http.put
•$http.delete
•$http.patch

//The Module
var app = angular.module('md',[]);
 
//The service with the get method. 
app.service('ms', function ($http) {
    this.getData = function () {
        var resp = $http.get("http://localhost:15377/api/TestAPI");
        return resp;
    };     
});
 
//The Controller
 
app.controller('ctrl', function ($scope,ms) {
 
    loadData();
 
    function loadData() {
        //The controller call the function from the service
        var promiseGetData = ms.getData();
        //Callback with success and failure
        promiseGetData.then(function (res) {
            $scope.Persons = res.data;
            $scope.Message = "Call Completed Successfully...";
        }, function (err) {
            $scope.Message = "Call failed" + err.status + "  " + err.statusText;
        });
    }
    $scope.Person = {
        FirstName: "" ,
        LastName: ""
    };   
});

http://www.dotnetcurry.com/aspnet/1049/crud-database-aspnet-webapi-angularjs

AngularJS provides built-in support to communicate with a server. You can either use an XMLHttpRequest object (async request) or JSON (sync or async request).

$http is a core Angular service that provides access to low-level interactions with remote Http services using the XMLHttpRequest object. The $http API is used to perform asynchronous operations and returns a promise object to the caller which can be used to receive notifications about the Ajax request. We can make use of then() method of the promise object to register callbacks. Other methods defined by a promise object are success (callback) and fail(callback) to handle success and fail respectively for the callback. The success callback function receives the data retrieved from the server, and the error callback receives details of any errors.


Following is the list of method offered by $http
•$http.get
•$http.post
•$http.put
•$http.delete
•$http.patch

In the Scripts folder add a new JavaScript file of name Logic.js. Add the following code in it:

//The Module
var app = angular.module('md',[]);
 
//The service with the get method. 
app.service('ms', function ($http) {
    this.getData = function () {
        var resp = $http.get("http://localhost:15377/api/TestAPI");
        return resp;
    };     
});
 
//The Controller
 
app.controller('ctrl', function ($scope,ms) {
 
    loadData();
 
    function loadData() {
        //The controller call the function from the service
        var promiseGetData = ms.getData();
        //Callback with success and failure
        promiseGetData.then(function (res) {
            $scope.Persons = res.data;
            $scope.Message = "Call Completed Successfully...";
        }, function (err) {
            $scope.Message = "Call failed" + err.status + "  " + err.statusText;
        });
    }
    $scope.Person = {
        FirstName: "" ,
        LastName: ""
    };   
});

•First, you will learn the basics of AngularJS: directives, expressions, filters, modules and controllers. 
•Then you will learn everything else you need to be familiar with Angular. 
•Events, DOM, Forms, Input, Validation, HTTP.

1:Directives
2.Expressions
3.$scope object
4.Controllers
5.Model
6.Module
7.Filters
8.Data binding


1  :Directives
•ng-app
•ng-model
•ng-controllers
•ng-click
•ng-repeat
•ng-view
•ng-bind

2. Expressions 
•The {{   }} are a declarative way of specifying a data binding location in HTML. AngularJS will automatically update this text.

3.
Angular Module
An Angular module is simply a collection of functions defined in a JavaScript file. 

ng-model
ng-controller
ng-submit
ng-show
ng-model
ng-App
ng-class
$dirty
$scopr

Controllers
In Angular, a Controller is a JavaScript constructor function that augments the Angular Scope.

$scope object
•Scope is the glue between an application controller and the view.

6:Filters
Filters allow formatting the data to be displayed on the DOM. Filters are invoked in the HTML with the | (pipe) character inside expressions {{ }}.
