*************Course module to be updated***********
MangoBD with .net
Angular JS syntax and crud operations
MVC(Grid,dropdown,listbox,CRUD,Dropdown,Binding,Ajax calls, Pushing the data,Master pages,Sections
Oauth,Authencation)
Gramework(Structure map,unity,Nunit,MOQ,DI,  )
EF
Webapi
WCF go through the interview document
C# learn new things(4.0 to 6.0)
IIS
Sql(SSIS,SSRS)
*********Interview prepartion*******
WCF,REST services
ANgular,MVC,Jquery syantx
Performance improvements

****************Soft skills*************
Would like to expertise in the skill set
Would like to boost the applications
***********Certifications*********
MCDS
MVP
********************************
Week-1 Angular CRUD,Dropdown,Binding text, validations

Latest Technology in Dotnet

Git and GitHub: Git is now the most widely used source control system on the market and the de facto standard for source control and code collaboration, and it is now an option with TFS. GitHub is also pretty much the go-to place for code sharing: it's now every bit as important to developers as LinkedIn or Facebook, and an increasing number of companies expect job candidates to have an active GitHub account. Some parts of the .net stack are actually open sourced and accepting pull requests on GitHub -- examples include ASP.NET MVC and Entity Framework. 

NoSQL databases: There are several of these to choose from: MongoDB seems to be the market leader industry-wide; RavenDB is the most popular one in the .net ecosystem. Their free-format approach reduces the burden of having to write schema migrations to add new tables or columns and the like, though they do have completely different architectures and performance characteristics, so there will be a bit of a learning curve. 

•Modern automated deployment practices: These days, continuous delivery and deployment are becoming increasingly common: on many teams, the goal is to get your deployment process automated to the extent that it consists of nothing more than typing 

NancyFX: This is a pretty popular, open source, third party alternative to ASP.NET MVC and WebAPI. Strongly recommended to give you a different perspective on how web applications can be developed from the "standard" one promoted by MVC/WebAPI. 

http://www.dotnetodyssey.com/2014/10/08/things-every-asp-net-developers-should-know/
****************************************
*************MOQ******************
Many a times, we see that we have to depend on many external dependencies while development or unit testing 
our code for example, depending on a group of web service or WCF services providing us some data, 
stored procedure for some magic values or a Flat/XML file system.

In such a case, it's very difficult to code or unit test your application without hard coding the 
dependencies reason being those dependencies might not been in place or developed yet or we have been provided only with contracts with no concrete implementation.

Here MOQ is responsible for creating a proxy/fake for us and we have used setup method to set the expected results of the fake object.In order to Mock a property/method of a class, we need to mark it with virtual keyword.
Other frameworks
NMock 
EasyMock.NET
Rhino Mocks
FakeItEasy